[{"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\index.js":"1","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\store.js":"2","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\App.js":"3","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\productReducers.js":"4","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\toppingReducers.js":"5","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Register.js":"7","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\Home.js":"8","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Footer.js":"9","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Login.js":"10","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Profile.js":"11","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Header.js":"12","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\admin\\Dashboard.js":"13","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\login_signup.js":"14","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\UpdateProfile.js":"15","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\route\\protectedRoute.js":"16","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\userActions.js":"17","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\UpdatePassword.js":"18","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\toppingConstants.js":"19","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\productConstants.js":"20","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Loader.js":"22","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\MetaData.js":"23","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Search.js":"24","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\productActions.js":"25","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\Product.js":"26","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\ProductModal.js":"27","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\toppingActions.js":"28","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\_Pages\\Homepage.js":"29","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\_Atomic\\Mynavbar.js":"30"},{"size":623,"mtime":1650853349890,"results":"31","hashOfConfig":"32"},{"size":696,"mtime":1653386744492,"results":"33","hashOfConfig":"32"},{"size":1940,"mtime":1653410223548,"results":"34","hashOfConfig":"32"},{"size":923,"mtime":1650853349891,"results":"35","hashOfConfig":"32"},{"size":923,"mtime":1653386744491,"results":"36","hashOfConfig":"32"},{"size":3122,"mtime":1653398257240,"results":"37","hashOfConfig":"32"},{"size":6699,"mtime":1653386744486,"results":"38","hashOfConfig":"32"},{"size":2079,"mtime":1650853349885,"results":"39","hashOfConfig":"32"},{"size":357,"mtime":1650853349886,"results":"40","hashOfConfig":"32"},{"size":3106,"mtime":1653386744483,"results":"41","hashOfConfig":"32"},{"size":2233,"mtime":1653386744484,"results":"42","hashOfConfig":"32"},{"size":3459,"mtime":1653386744480,"results":"43","hashOfConfig":"32"},{"size":317,"mtime":1650853349885,"results":"44","hashOfConfig":"32"},{"size":1394,"mtime":1653400132758,"results":"45","hashOfConfig":"32"},{"size":6508,"mtime":1653386744487,"results":"46","hashOfConfig":"32"},{"size":951,"mtime":1650853349888,"results":"47","hashOfConfig":"32"},{"size":3983,"mtime":1653398257190,"results":"48","hashOfConfig":"32"},{"size":3013,"mtime":1653398257208,"results":"49","hashOfConfig":"32"},{"size":218,"mtime":1653386744489,"results":"50","hashOfConfig":"32"},{"size":218,"mtime":1650853349890,"results":"51","hashOfConfig":"32"},{"size":1112,"mtime":1653398257225,"results":"52","hashOfConfig":"32"},{"size":135,"mtime":1650853349886,"results":"53","hashOfConfig":"32"},{"size":245,"mtime":1650853349887,"results":"54","hashOfConfig":"32"},{"size":1137,"mtime":1650853349887,"results":"55","hashOfConfig":"32"},{"size":774,"mtime":1653386744477,"results":"56","hashOfConfig":"32"},{"size":9107,"mtime":1653386744481,"results":"57","hashOfConfig":"32"},{"size":1803,"mtime":1653386744482,"results":"58","hashOfConfig":"32"},{"size":743,"mtime":1653386744477,"results":"59","hashOfConfig":"32"},{"size":163,"mtime":1653400608278,"results":"60","hashOfConfig":"32"},{"size":1332,"mtime":1653408584697,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1npxic1",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\index.js",[],["132","133"],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\store.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\App.js",["134","135","136","137"],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\toppingReducers.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Register.js",["138","139","140"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        phonenumber: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, phonenumber, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n    const [path, setpath] = useState('')\r\n    // const { name, email, password } = user;\r\n    // const [name, setName] = useState('');\r\n    // const [phonenumber, setPhoneNumber] = useState('');\r\n    // const [email, setEmail] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('phonenumber', phonenumber);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n            console.log(\"444\" + e.target.value)\r\n            reader.onload = () => {\r\n                console.log(reader.readyState)\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {/* <MetaData title={'Register User'} /> */}\r\n\r\n            <div className=\"Signup\">\r\n                <img src=\"/images/logo-1.jpg\" className=\"logo\" alt=\"Business view - Reports\" />\r\n                <form className=\"form\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                    {/* <h1 className=\"mb-3\">Register</h1> */}\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"name_field\">Name</label>\r\n                        <input\r\n                            type=\"name\"\r\n                            id=\"name_field\"\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"phonenumber_field\">Phone Number</label>\r\n                        <input\r\n                            type=\"phonenumber\"\r\n                            id=\"phonenumber_field\"\r\n                            name='phonenumber'\r\n                            value={phonenumber}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"email_field\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email_field\"\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"password_field\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password_field\"\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* <div className=\"group\">\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <input \r\n                        type=\"confirmPassword\" \r\n                        name=\"confirmPassword\" \r\n                        />\r\n                    </div> */}\r\n\r\n                    <div className='group'>\r\n                        <label htmlFor='avatar_upload'>Avatar</label>\r\n                        <div className='d-flex align-items-center'>\r\n                            <div>\r\n                                <figure className='avatar mr-3 item-rtl'>\r\n                                    <img\r\n                                        src={avatarPreview}\r\n                                        className='rounded-circle'\r\n                                        alt='Avatar Preview'\r\n                                    />\r\n                                </figure>\r\n                            </div>\r\n                            <div className='custom-file' style={{marginRight:\"75px\"}}>\r\n                                <input\r\n                                    type='file'\r\n                                    name='avatar'\r\n                                    className='custom-file-input'\r\n                                    id='customFile'\r\n                                    accept=\"images/*\"\r\n                                    onChange={onChange}\r\n                                />\r\n                                <label className='custom-file-label' htmlFor='customFile'>\r\n                                    Choose Avatars\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        id=\"button\"\r\n                        type=\"submit\"\r\n                        className=\"primary\"\r\n                        disabled={loading ? true : false}\r\n                    >\r\n                        REGISTER\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\Home.js",["141"],"import React, { Fragment, useEffect } from 'react'\r\nimport MetaData from './layout/MetaData'\r\nimport Product from './product/Product'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts } from '../actions/productActions'\r\n\r\nconst Home = ({ match }) => {\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, products, error, productsCount } = useSelector(state => state.products)\r\n\r\n  const keyword = match.params.keyword\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error)\r\n    }\r\n    //alert.success('Success')\r\n    dispatch(getProducts(keyword));\r\n  }, [dispatch, alert, error, keyword])\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? <Loader /> : (\r\n        <Fragment>\r\n          <MetaData title={'Home Page'} />\r\n          <section id=\"products\" className=\"container mt-4\">\r\n          <h1 id=\"products_heading\">Pizza Flavours</h1>\r\n            <div className=\"row\">\r\n              {products && products.map(product => (\r\n                <Product key={product._id} product={\r\n                  product.category === 'Pizzas' && (product) } />\r\n              ))}\r\n            </div>\r\n          </section>\r\n          <section id=\"products\" className=\"container mt-5\">\r\n          <h1 id=\"products_heading\">Beverages</h1>\r\n            <div className=\"row\">\r\n              {products && products.map(product => (\r\n                <Product key={product._id} product={product.category === 'Beverages' && (product) } />\r\n              ))}\r\n            </div>\r\n          </section>\r\n          <section id=\"products\" className=\"container mt-5\">\r\n          <h1 id=\"products_heading\">Sauces</h1>\r\n            <div className=\"row\">\r\n              {products && products.map(product => (\r\n                <Product key={product._id} product={product.category === 'Sauces' && (product) } />\r\n              ))}\r\n            </div>\r\n          </section>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Login.js",["142","143","144","145"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            //alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* {loading ? <Loader /> : ( */}\r\n                <Fragment>\r\n                    {/* <MetaData title={'Login'} /> */}\r\n                    <div className=\"Login\">\r\n                        <img src=\"/images/logo-1.jpg\" className=\"logo\" alt=\"Business view - Reports\" />\r\n                        <form className=\"form\" onSubmit={submitHandler}>\r\n                                {/* <h1 className=\"mb-3\">Login</h1> */}\r\n                                <div className=\"group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    id=\"button\"\r\n                                    type=\"submit\"\r\n                                    className=\"primary\"\r\n                                >\r\n                                    LOGIN\r\n                                 </button>\r\n                            </form>\r\n                    </div>\r\n                </Fragment>\r\n            {/* )} */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Header.js",["146"],"import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search';\r\n\r\nimport '../../App.css';\r\n// check this\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img src=\"/images/logo.jpg\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">0</span>\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-black mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <figure className=\"avatar avatar-nav\">  \r\n                                    <img\r\n                                        src={(user.avatar && user.avatar.url) || '/images/default_avatar.jpg'}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n                                {user && user.role !== 'admin' ? (\r\n                                    <Link className=\"dropdown-item\" to=\"/myorders\">Orders</Link>\r\n                                ) : (\r\n                                    <Link className=\"dropdown-item\" to=\"/admin/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/profile\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </div>\r\n                ) : !loading && <Link to=\"/login\" style={{ color: \"white\" }} className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n                {/* ) : !loading && <Link to=\"/login\" style={{color: \"white\"}} className=\"btn ml-4\" id=\"login_btn\">Login</Link>} */}\r\n            </div>\r\n        </nav>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\login_signup.js",["147","148","149","150","151"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport MetaData from '../layout/MetaData';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n\r\n\r\nconst login_signup = () => {\r\n\r\n    // const handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     console.log(e.target.email.value);\r\n    \r\n    //     if (!e.target.email.value) {\r\n    //       alert(\"Email is required\");\r\n    //     } else if (!e.target.email.value) {\r\n    //       alert(\"Valid email is required\");\r\n    //     } else if (!e.target.password.value) {\r\n    //       alert(\"Password is required\");\r\n    //     } else if (\r\n    //       e.target.email.value === \"me@example.com\" &&\r\n    //       e.target.password.value === \"123456\"\r\n    //     ) {\r\n    //       alert(\"Successfully logged in\");\r\n    //       e.target.email.value = \"\";\r\n    //       e.target.password.value = \"\";\r\n    //     } else {\r\n    //       alert(\"Wrong email or password combination\");\r\n    //     }\r\n    //   };\r\n    \r\n    return (\r\n        \r\n        <div className=\"row1\">\r\n            <MetaData title={'Login/Signup'} />\r\n            <Route render={({ history }) => <Login history={history} />} />\r\n            {/* <Route render={({ history }) => <Register history={history} />} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default login_signup","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\UpdateProfile.js",["152"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [phonenumber, setPhoneNumber] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    //const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setPhoneNumber(user.phonenumber);\r\n            setEmail(user.email);\r\n            setAvatarPreview((user && user.avatar.url) || '/images/default_avatar.jpg')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/profile')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('phonenumber', phonenumber);\r\n        formData.set('email', email);\r\n        // formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n            const reader = new FileReader();\r\n            console.log(\"444\" + e.target.value)\r\n            reader.onload = () => {\r\n                console.log(reader.readyState)\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n            reader.readAsDataURL(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phonenumber_field\">Phone Number</label>\r\n                            <input\r\n                                type=\"phonenumber\"\r\n                                id=\"phonenumber_field\"\r\n                                className=\"form-control\"\r\n                                name='phonenumber'\r\n                                value={phonenumber}\r\n                                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false}>Update</button>\r\n                        {/* <button type=\"submit\" id = \"update_profile\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false}>Update</button> */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\route\\protectedRoute.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\userActions.js",["153","154"],"import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.error\r\n        })\r\n    }\r\n}\r\n\r\n// Register user \r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/profile/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.error\r\n        })\r\n    }\r\n}\r\n\r\n// Update password\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/profile/update/password', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.error\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Load user \r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/profile')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.error\r\n        })\r\n    }\r\n}\r\n\r\n// Register user \r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/signup', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.error\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        await axios.get('/api/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\toppingConstants.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\Product.js",["155","156","157","158","159","160","161"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ProductModal from './ProductModal'\r\nimport { useAlert } from 'react-alert'\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getToppings } from '../../actions/toppingActions';\r\n\r\nconst Product = ({ product }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, toppings, error, toppingsCount } = useSelector(state => state.toppings)\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n        //alert.success('Success')\r\n    }, [alert, error])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n    const addtocart = () => {\r\n        alert.success(\"Added to cart!\");\r\n    }\r\n\r\n    const loadmodal = () => {\r\n        setShow(true);\r\n        // <ProductModal flag = {show} match={product._id} />\r\n        //console.log(show)\r\n        dispatch(getToppings());\r\n        console.log(product._id)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {product.category === 'Pizzas' && (\r\n                <div className=\"container mt-5\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                    <div className=\"card mb-1\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                        <div className=\"row\" style={{ height: \"220px\" }}>\r\n                            <div className=\"col mt-4 txt-col flex-70\">\r\n                                <h5 id=\"card-title\">\r\n                                    <Link style={{ fontSize: \"20px\" }} to={`/product/${product._id}`}> {product.name}</Link>\r\n                                </h5>\r\n                                <p style={{ fontSize: \"15px\" }} className=\"card-text\">Starting Price Rs {product.PizzaDetails.size.large}</p>\r\n                                {/* <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">ADD TO CART</Link> */}\r\n                            </div>\r\n                            {/* <Modal match={product._id} /> */}\r\n                            <div className=\"col p-0 text-right flex-auto\" id=\"col\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                                <i className=\"onlycover circlex icon icon-pos\" style={{ height: \"220px\" }}>\r\n                                    <div className=\"img container\">\r\n                                        <div className=\"image-wrapper2\">\r\n                                            <img\r\n                                                className=\"card-img-top mx-auto\"\r\n                                                src=\"/images/pizza.jpg\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </i>\r\n                                <i onClick={() => { loadmodal() }} type=\"button\" className=\"fa fa-plus flat-plus-icon foreground background\"></i>\r\n                                {/* <i onClick={() => { loadmodal() }} type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\" className=\"fa fa-plus flat-plus-icon foreground background\"></i> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <ProductModal flag = {show} match={product._id} /> */}\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{product.name}</Modal.Title>\r\n                            {/* <Modal.Title>{product._id}</Modal.Title> */}\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>\r\n                                <h1>\r\n                                    Rs. {product.PizzaDetails.size.small}\r\n                                </h1>\r\n                                <h1>\r\n                                    Rs. {product.PizzaDetails.size.regular}\r\n                                </h1>\r\n                                <h1>\r\n                                    Rs. {product.PizzaDetails.size.large}\r\n                                </h1>\r\n                                <h1>\r\n                                    Rs. {product.PizzaDetails.size.jumbo}\r\n                                </h1>\r\n                            </div>\r\n                            <div>\r\n                                <h1>Extra Toppings</h1>\r\n                                {toppings && toppings.map(topping => (\r\n                                    <h1>\r\n                                        {topping.name}\r\n                                    </h1>\r\n                                ))}\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close Modal\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n            }\r\n            {product.category === 'Beverages' && (\r\n                <div className=\"container mt-5\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"row\" style={{ height: \"220px\" }}>\r\n                            <div className=\"col mt-4 txt-col flex-70\">\r\n                                <h5 id=\"card-title\">\r\n                                    <Link style={{ fontSize: \"20px\" }} to={`/product/${product._id}`}> {product.name}</Link>\r\n                                </h5>\r\n                                <p style={{ fontSize: \"15px\" }} className=\"card-text\">Rs {product.BeverageDetails.price}</p>\r\n                                {/* <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">ADD TO CART</Link> */}\r\n                            </div>\r\n                            <div className=\"col p-0 text-right flex-auto\" id=\"col\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                                <i className=\"onlycover circlex icon icon-pos\" style={{ height: \"220px\" }}>\r\n                                    <div className=\"img container\">\r\n                                        <div className=\"image-wrapper2\">\r\n                                            <img\r\n                                                className=\"card-img-top mx-auto\"\r\n                                                src=\"/images/drink.jpg\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </i>\r\n                                <i type=\"button\" onClick={() => { addtocart() }} className=\"fa fa-plus flat-plus-icon foreground background\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n            {product.category === 'Sauces' && (\r\n                <div className=\"container mt-5\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"row\" style={{ height: \"220px\" }}>\r\n                            <div className=\"col mt-4 txt-col flex-70\">\r\n                                <h5 id=\"card-title\">\r\n                                    <Link style={{ fontSize: \"20px\" }} to={`/product/${product._id}`}> {product.name}</Link>\r\n                                </h5>\r\n                                <p style={{ fontSize: \"15px\" }} className=\"card-text\">Rs {product.SauceDetails.price}</p>\r\n                                {/* <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">ADD TO CART</Link> */}\r\n                            </div>\r\n                            <div className=\"col p-0 text-right flex-auto\" id=\"col\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                                <i className=\"onlycover circlex icon icon-pos\" style={{ height: \"220px\" }}>\r\n                                    <div className=\"img container\">\r\n                                        <div className=\"image-wrapper2\">\r\n                                            <img\r\n                                                className=\"card-img-top mx-auto\"\r\n                                                src=\"/images/sauce.jpg\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </i>\r\n                                <i type=\"button\" onClick={() => { addtocart() }} className=\"fa fa-plus flat-plus-icon foreground background\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Product","C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\ProductModal.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\toppingActions.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\_Pages\\Homepage.js",[],"C:\\Users\\Ebrahim Baig\\Documents\\GitHub\\online-pizza\\frontend\\src\\_Atomic\\Mynavbar.js",["162","163"],"import React from 'react'\r\nimport { Navbar, Container, Nav, NavDropdown, div, Button } from 'react-bootstrap'\r\n\r\n  \r\n\r\nconst mynavbar = () => {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n      <Container>\r\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"#features\">Features</Nav.Link>\r\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n          <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n          <Nav.Link eventKey={2} href=\"#memes\">\r\n            Dank memes\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\nexport default mynavbar",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":14},{"ruleId":"168","severity":1,"message":"172","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":13},{"ruleId":"168","severity":1,"message":"173","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":16},{"ruleId":"168","severity":1,"message":"174","line":24,"column":10,"nodeType":"170","messageId":"171","endLine":24,"endColumn":18},{"ruleId":"168","severity":1,"message":"175","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":16},{"ruleId":"168","severity":1,"message":"176","line":22,"column":12,"nodeType":"170","messageId":"171","endLine":22,"endColumn":16},{"ruleId":"168","severity":1,"message":"177","line":22,"column":18,"nodeType":"170","messageId":"171","endLine":22,"endColumn":25},{"ruleId":"168","severity":1,"message":"178","line":15,"column":37,"nodeType":"170","messageId":"171","endLine":15,"endColumn":50},{"ruleId":"168","severity":1,"message":"179","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"180","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":14},{"ruleId":"168","severity":1,"message":"175","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":16},{"ruleId":"168","severity":1,"message":"181","line":19,"column":37,"nodeType":"170","messageId":"171","endLine":19,"endColumn":44},{"ruleId":"182","severity":1,"message":"183","line":30,"column":29,"nodeType":"184","endLine":30,"endColumn":59},{"ruleId":"168","severity":1,"message":"185","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"186","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":35},{"ruleId":"168","severity":1,"message":"187","line":1,"column":37,"nodeType":"170","messageId":"171","endLine":1,"endColumn":46},{"ruleId":"168","severity":1,"message":"173","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":16},{"ruleId":"168","severity":1,"message":"188","line":5,"column":27,"nodeType":"170","messageId":"171","endLine":5,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":51,"column":8,"nodeType":"191","endLine":51,"endColumn":52,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"193","line":14,"column":5,"nodeType":"170","messageId":"171","endLine":14,"endColumn":25},{"ruleId":"168","severity":1,"message":"194","line":18,"column":5,"nodeType":"170","messageId":"171","endLine":18,"endColumn":26},{"ruleId":"168","severity":1,"message":"195","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":20},{"ruleId":"168","severity":1,"message":"196","line":5,"column":25,"nodeType":"170","messageId":"171","endLine":5,"endColumn":29},{"ruleId":"168","severity":1,"message":"181","line":15,"column":13,"nodeType":"170","messageId":"171","endLine":15,"endColumn":20},{"ruleId":"168","severity":1,"message":"197","line":15,"column":39,"nodeType":"170","messageId":"171","endLine":15,"endColumn":52},{"ruleId":"182","severity":1,"message":"183","line":57,"column":45,"nodeType":"184","endLine":60,"endColumn":47},{"ruleId":"182","severity":1,"message":"183","line":123,"column":45,"nodeType":"184","endLine":126,"endColumn":47},{"ruleId":"182","severity":1,"message":"183","line":151,"column":45,"nodeType":"184","endLine":154,"endColumn":47},{"ruleId":"168","severity":1,"message":"198","line":2,"column":47,"nodeType":"170","messageId":"171","endLine":2,"endColumn":50},{"ruleId":"168","severity":1,"message":"199","line":2,"column":52,"nodeType":"170","messageId":"171","endLine":2,"endColumn":58},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Register' is defined but never used.","'Homepage' is defined but never used.","'MetaData' is defined but never used.","'path' is assigned a value but never used.","'setpath' is assigned a value but never used.","'productsCount' is assigned a value but never used.","'Link' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'UPDATE_PROFILE_RESET' is defined but never used.","'UPDATE_PASSWORD_RESET' is defined but never used.","'ProductModal' is defined but never used.","'Form' is defined but never used.","'toppingsCount' is assigned a value but never used.","'div' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"205","text":"206"},[1570,1614],"[dispatch, alert, error, history, isUpdated, user]"]