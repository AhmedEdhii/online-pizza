[{"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\index.js":"1","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\store.js":"2","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\App.js":"3","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\reducers\\productReducers.js":"4","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\Home.js":"5","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Footer.js":"6","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Header.js":"7","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\MetaData.js":"8","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Search.js":"9","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Loader.js":"10","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\product\\Product.js":"11","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\reducers\\userReducers.js":"14","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\Login.js":"15","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\actions\\userActions.js":"16","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\constants\\userConstants.js":"17","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\Register.js":"18","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\Profile.js":"19","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\route\\protectedRoute.js":"20","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\UpdateProfile.js":"21","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\admin\\Dashboard.js":"22","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\index.js":"23","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\store.js":"24","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\App.js":"25","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\productReducers.js":"26","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\userReducers.js":"27","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Register.js":"28","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\Home.js":"29","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Footer.js":"30","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Login.js":"31","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Header.js":"32","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\login_signup.js":"33","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\UpdateProfile.js":"34","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Profile.js":"35","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\admin\\Dashboard.js":"36","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\route\\protectedRoute.js":"37","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\userActions.js":"38","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\MetaData.js":"39","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Search.js":"40","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Loader.js":"41","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\productActions.js":"42","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\productConstants.js":"43","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\userConstants.js":"44","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\Product.js":"45","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\ProductModal.js":"46"},{"size":599,"mtime":1649291017983,"results":"47","hashOfConfig":"48"},{"size":601,"mtime":1649971914469,"results":"49","hashOfConfig":"48"},{"size":1525,"mtime":1652636123428,"results":"50","hashOfConfig":"48"},{"size":923,"mtime":1649189543975,"results":"51","hashOfConfig":"48"},{"size":2079,"mtime":1650936425765,"results":"52","hashOfConfig":"48"},{"size":357,"mtime":1649371761699,"results":"53","hashOfConfig":"48"},{"size":2905,"mtime":1651963714314,"results":"54","hashOfConfig":"48"},{"size":245,"mtime":1649161455041,"results":"55","hashOfConfig":"48"},{"size":1139,"mtime":1651963069326,"results":"56","hashOfConfig":"48"},{"size":135,"mtime":1649195319744,"results":"57","hashOfConfig":"48"},{"size":5865,"mtime":1650936561768,"results":"58","hashOfConfig":"48"},{"size":218,"mtime":1649170441990,"results":"59","hashOfConfig":"48"},{"size":776,"mtime":1650829428137,"results":"60","hashOfConfig":"48"},{"size":2852,"mtime":1649976250156,"results":"61","hashOfConfig":"48"},{"size":3122,"mtime":1652636360282,"results":"62","hashOfConfig":"48"},{"size":3330,"mtime":1649972332267,"results":"63","hashOfConfig":"48"},{"size":856,"mtime":1649971715503,"results":"64","hashOfConfig":"48"},{"size":4298,"mtime":1651961865529,"results":"65","hashOfConfig":"48"},{"size":1670,"mtime":1649446993679,"results":"66","hashOfConfig":"48"},{"size":951,"mtime":1649375899937,"results":"67","hashOfConfig":"48"},{"size":3944,"mtime":1650493970945,"results":"68","hashOfConfig":"48"},{"size":317,"mtime":1649975719366,"results":"69","hashOfConfig":"48"},{"size":599,"mtime":1649291017983,"results":"70","hashOfConfig":"71"},{"size":601,"mtime":1653253660509,"results":"72","hashOfConfig":"71"},{"size":1525,"mtime":1653256847965,"results":"73","hashOfConfig":"71"},{"size":923,"mtime":1649189543975,"results":"74","hashOfConfig":"71"},{"size":2852,"mtime":1653253050525,"results":"75","hashOfConfig":"71"},{"size":6765,"mtime":1653247859659,"results":"76","hashOfConfig":"71"},{"size":2079,"mtime":1653253307725,"results":"77","hashOfConfig":"71"},{"size":357,"mtime":1653252808510,"results":"78","hashOfConfig":"71"},{"size":3118,"mtime":1653247850014,"results":"79","hashOfConfig":"71"},{"size":3031,"mtime":1653252811182,"results":"80","hashOfConfig":"71"},{"size":1386,"mtime":1653160121539,"results":"81","hashOfConfig":"71"},{"size":3944,"mtime":1653256874273,"results":"82","hashOfConfig":"71"},{"size":1670,"mtime":1649446993679,"results":"83","hashOfConfig":"71"},{"size":317,"mtime":1649975719366,"results":"84","hashOfConfig":"71"},{"size":951,"mtime":1649375899937,"results":"85","hashOfConfig":"71"},{"size":3271,"mtime":1653256884138,"results":"86","hashOfConfig":"71"},{"size":245,"mtime":1649161455041,"results":"87","hashOfConfig":"71"},{"size":1139,"mtime":1651963069326,"results":"88","hashOfConfig":"71"},{"size":135,"mtime":1649195319744,"results":"89","hashOfConfig":"71"},{"size":776,"mtime":1650829428137,"results":"90","hashOfConfig":"71"},{"size":218,"mtime":1649170441990,"results":"91","hashOfConfig":"71"},{"size":856,"mtime":1649971715503,"results":"92","hashOfConfig":"71"},{"size":7438,"mtime":1653263829602,"results":"93","hashOfConfig":"71"},{"size":1650,"mtime":1653263469034,"results":"94","hashOfConfig":"71"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1kk1o42",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"m50nkh",{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\index.js",[],["199","200"],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\store.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\App.js",["201","202"],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\Home.js",["203"],"import React, { Fragment, useEffect } from 'react'\r\nimport MetaData from './layout/MetaData'\r\nimport Product from './product/Product'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts } from '../actions/productActions'\r\n\r\nconst Home = ({ match }) => {\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, products, error, productsCount } = useSelector(state => state.products)\r\n\r\n  const keyword = match.params.keyword\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error)\r\n    }\r\n    //alert.success('Success')\r\n    dispatch(getProducts(keyword));\r\n  }, [dispatch, alert, error, keyword])\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? <Loader /> : (\r\n        <Fragment>\r\n          <MetaData title={'Home Page'} />\r\n          <section id=\"products\" className=\"container mt-4\">\r\n          <h1 id=\"products_heading\">Pizza Flavours</h1>\r\n            <div className=\"row\">\r\n              {products && products.map(product => (\r\n                <Product key={product._id} product={\r\n                  product.category === 'Pizzas' && (product) } />\r\n              ))}\r\n            </div>\r\n          </section>\r\n          <section id=\"products\" className=\"container mt-5\">\r\n          <h1 id=\"products_heading\">Beverages</h1>\r\n            <div className=\"row\">\r\n              {products && products.map(product => (\r\n                <Product key={product._id} product={product.category === 'Beverages' && (product) } />\r\n              ))}\r\n            </div>\r\n          </section>\r\n          <section id=\"products\" className=\"container mt-5\">\r\n          <h1 id=\"products_heading\">Sauces</h1>\r\n            <div className=\"row\">\r\n              {products && products.map(product => (\r\n                <Product key={product._id} product={product.category === 'Sauces' && (product) } />\r\n              ))}\r\n            </div>\r\n          </section>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Header.js",["204"],"import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search';\r\n\r\nimport '../../App.css';\r\n// check this\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img src=\"/images/logo.jpg\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">0</span>\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-black mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <span id=\"text\"> {user && user.name}</span>\r\n                            </Link>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n                                {user && user.role !== 'admin' ? (\r\n                                    <Link className=\"dropdown-item\" to=\"/myorders\">Orders</Link>\r\n                                ) : (\r\n                                    <Link className=\"dropdown-item\" to=\"/admin/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/profile\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) : !loading && <Link to=\"/login\" style={{color: \"white\"}} className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\product\\Product.js",["205","206","207"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Fragment>\r\n            {product.category === 'Pizzas' && (\r\n                <div className=\"container mt-5\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                    <div className=\"card mb-1\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                        <div className=\"row\" style={{ height: \"220px\" }}>\r\n                            <div className=\"col mt-4 txt-col flex-70\">\r\n                                <h5 id=\"card-title\">\r\n                                    <Link style={{ fontSize: \"20px\" }} to={`/product/${product._id}`}> {product.name}</Link>\r\n                                </h5>\r\n                                <p style={{ fontSize: \"15px\" }} className=\"card-text\">Starting Price Rs {product.PizzaDetails.size.large}</p>\r\n                                {/* <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">ADD TO CART</Link> */}\r\n                            </div>\r\n                            <div className=\"col p-0 text-right flex-auto\" id=\"col\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                                <i className=\"onlycover circlex icon icon-pos\" style={{ height: \"220px\" }}>\r\n                                    <div className=\"img container\">\r\n                                        <div className=\"image-wrapper2\">\r\n                                            <img\r\n                                                className=\"card-img-top mx-auto\"\r\n                                                src=\"/images/pizza.jpg\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </i>\r\n                                <i className=\"fa fa-plus flat-plus-icon foreground background\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n            {product.category === 'Beverages' && (\r\n                <div className=\"container mt-5\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"row\" style={{ height: \"220px\" }}>\r\n                            <div className=\"col mt-4 txt-col flex-70\">\r\n                                <h5 id=\"card-title\">\r\n                                    <Link style={{ fontSize: \"20px\" }} to={`/product/${product._id}`}> {product.name}</Link>\r\n                                </h5>\r\n                                <p style={{ fontSize: \"15px\" }} className=\"card-text\">Rs {product.BeverageDetails.price}</p>\r\n                                {/* <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">ADD TO CART</Link> */}\r\n                            </div>\r\n                            <div className=\"col p-0 text-right flex-auto\" id=\"col\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                                <i className=\"onlycover circlex icon icon-pos\" style={{ height: \"220px\" }}>\r\n                                    <div className=\"img container\">\r\n                                        <div className=\"image-wrapper2\">\r\n                                            <img\r\n                                                className=\"card-img-top mx-auto\"\r\n                                                src=\"/images/drink.jpg\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </i>\r\n                                <i className=\"fa fa-plus flat-plus-icon foreground background\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n            {product.category === 'Sauces' && (\r\n                <div className=\"container mt-5\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"row\" style={{ height: \"220px\" }}>\r\n                            <div className=\"col mt-4 txt-col flex-70\">\r\n                                <h5 id=\"card-title\">\r\n                                    <Link style={{ fontSize: \"20px\" }} to={`/product/${product._id}`}> {product.name}</Link>\r\n                                </h5>\r\n                                <p style={{ fontSize: \"15px\" }} className=\"card-text\">Rs {product.SauceDetails.price}</p>\r\n                                {/* <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">ADD TO CART</Link> */}\r\n                            </div>\r\n                            <div className=\"col p-0 text-right flex-auto\" id=\"col\" style={{ maxWidth: \"500px\", height: \"220px\" }}>\r\n                                <i className=\"onlycover circlex icon icon-pos\" style={{ height: \"220px\" }}>\r\n                                    <div className=\"img container\">\r\n                                        <div className=\"image-wrapper2\">\r\n                                            <img\r\n                                                className=\"card-img-top mx-auto\"\r\n                                                src=\"/images/sauce.jpg\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </i>\r\n                                <i className=\"fa fa-plus flat-plus-icon foreground background\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Product","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\Login.js",["208","209","210","211"],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\actions\\userActions.js",["212"],"import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user \r\nexport const updateProfile = (name, phonenumber, email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/profile/update', { name, phonenumber, email, password }, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user \r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/profile')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user \r\nexport const register = (name, phonenumber, email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/signup', { name, phonenumber, email, password }, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        await axios.get('/api/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\Register.js",["213"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    // const [user, setUser] = useState({\r\n    //     name: '',\r\n    //     email: '',\r\n    //     password: '',\r\n    // })\r\n\r\n    // const { name, email, password } = user;\r\n    const [name, setName] = useState('');\r\n    const [phonenumber, setPhoneNumber] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(register(name, phonenumber, email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {/* <MetaData title={'Register User'} /> */}\r\n\r\n            <div className=\"Signup\">\r\n            <img src=\"/images/logo-1.jpg\" className=\"logo\" alt=\"Business view - Reports\" />\r\n                <form className=\"form\" onSubmit={submitHandler}>\r\n                    {/* <h1 className=\"mb-3\">Register</h1> */}\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"name_field\">Name</label>\r\n                        <input\r\n                            type=\"name\"\r\n                            id=\"name_field\"\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"phonenumber_field\">Phone Number</label>\r\n                        <input\r\n                            type=\"phonenumber\"\r\n                            id=\"phonenumber_field\"\r\n                            name='phonenumber'\r\n                            value={phonenumber}\r\n                            onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"email_field\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email_field\"\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password_field\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password_field\"\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* <div className=\"input-group\">\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <input \r\n                        type=\"confirmPassword\" \r\n                        name=\"confirmPassword\" \r\n                        />\r\n                    </div> */}\r\n\r\n                    <button\r\n                        id=\"register_button\"\r\n                        type=\"submit\"\r\n                        className=\"primary\"\r\n                        disabled={loading ? true : false}\r\n                    >\r\n                        REGISTER\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\route\\protectedRoute.js",[],"C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\user\\UpdateProfile.js",["214"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [phonenumber, setPhoneNumber] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    //const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setPhoneNumber(user.phonenumber);\r\n            setEmail(user.email);\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/profile')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateProfile(name, phonenumber, email))\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phonenumber_field\">Phone Number</label>\r\n                            <input\r\n                                type=\"phonenumber\"\r\n                                id=\"phonenumber_field\"\r\n                                className=\"form-control\"\r\n                                name='phonenumber'\r\n                                value={phonenumber}\r\n                                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","C:\\Users\\ahmed\\Documents\\project\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\index.js",[],["215","216"],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\store.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\App.js",["217","218"],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Register.js",["219","220","221"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        phonenumber: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, phonenumber, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('/images/default_avatar.jpg')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n    const [path, setpath] = useState('')\r\n    // const { name, email, password } = user;\r\n    // const [name, setName] = useState('');\r\n    // const [phonenumber, setPhoneNumber] = useState('');\r\n    // const [email, setEmail] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('phonenumber', phonenumber);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n            console.log(\"444\" + e.target.value)\r\n            reader.onload = () => {\r\n                console.log(reader.readyState)\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {/* <MetaData title={'Register User'} /> */}\r\n\r\n            <div className=\"Signup\">\r\n                <img src=\"/images/logo-1.jpg\" className=\"logo\" alt=\"Business view - Reports\" />\r\n                <form className=\"form\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                    {/* <h1 className=\"mb-3\">Register</h1> */}\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"name_field\">Name</label>\r\n                        <input\r\n                            type=\"name\"\r\n                            id=\"name_field\"\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"phonenumber_field\">Phone Number</label>\r\n                        <input\r\n                            type=\"phonenumber\"\r\n                            id=\"phonenumber_field\"\r\n                            name='phonenumber'\r\n                            value={phonenumber}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"email_field\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email_field\"\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password_field\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password_field\"\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* <div className=\"input-group\">\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <input \r\n                        type=\"confirmPassword\" \r\n                        name=\"confirmPassword\" \r\n                        />\r\n                    </div> */}\r\n\r\n                    <div className='input-group'>\r\n                        <label htmlFor='avatar_upload'>Avatar</label>\r\n                        <div className='d-flex align-items-center'>\r\n                            <div>\r\n                                <figure className='avatar mr-3 item-rtl'>\r\n                                    <img\r\n                                        src={avatarPreview}\r\n                                        className='rounded-circle'\r\n                                        alt='Avatar Preview'\r\n                                    />\r\n                                </figure>\r\n                            </div>\r\n                            <div className='custom-file' style={{marginRight:\"80px\"}}>\r\n                                <input\r\n                                    type='file'\r\n                                    name='avatar'\r\n                                    className='custom-file-input'\r\n                                    id='customFile'\r\n                                    accept=\"images/*\"\r\n                                    onChange={onChange}\r\n                                />\r\n                                <label className='custom-file-label' htmlFor='customFile'>\r\n                                    Choose Avatars\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        id=\"button\"\r\n                        type=\"submit\"\r\n                        className=\"primary\"\r\n                        disabled={loading ? true : false}\r\n                    >\r\n                        REGISTER\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\Home.js",["222"],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Login.js",["223","224","225","226"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            //alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* {loading ? <Loader /> : ( */}\r\n                <Fragment>\r\n                    {/* <MetaData title={'Login'} /> */}\r\n                    <div className=\"Login\">\r\n                        <img src=\"/images/logo-1.jpg\" className=\"logo\" alt=\"Business view - Reports\" />\r\n                        <form className=\"form\" onSubmit={submitHandler}>\r\n                                {/* <h1 className=\"mb-3\">Login</h1> */}\r\n                                <div className=\"input-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"input-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <button\r\n                                    id=\"button\"\r\n                                    type=\"submit\"\r\n                                    className=\"primary\"\r\n                                >\r\n                                    LOGIN\r\n                                 </button>\r\n                            </form>\r\n                    </div>\r\n                </Fragment>\r\n            {/* )} */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Header.js",["227","228"],"import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search';\r\n\r\nimport '../../App.css';\r\n// check this\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img src=\"/images/logo.jpg\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">0</span>\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-black mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <span id=\"text\"> {user && user.name}</span>\r\n                            </Link>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n                                {user && user.role !== 'admin' ? (\r\n                                    <Link className=\"dropdown-item\" to=\"/myorders\">Orders</Link>\r\n                                ) : (\r\n                                    <Link className=\"dropdown-item\" to=\"/admin/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/profile\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) : <Link to=\"/login\" style={{color: \"white\"}} className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n                    {/* ) : !loading && <Link to=\"/login\" style={{color: \"white\"}} className=\"btn ml-4\" id=\"login_btn\">Login</Link>} */}\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\login_signup.js",["229","230","231","232"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport MetaData from '../layout/MetaData';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n\r\n\r\nconst login_signup = () => {\r\n\r\n    // const handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     console.log(e.target.email.value);\r\n    \r\n    //     if (!e.target.email.value) {\r\n    //       alert(\"Email is required\");\r\n    //     } else if (!e.target.email.value) {\r\n    //       alert(\"Valid email is required\");\r\n    //     } else if (!e.target.password.value) {\r\n    //       alert(\"Password is required\");\r\n    //     } else if (\r\n    //       e.target.email.value === \"me@example.com\" &&\r\n    //       e.target.password.value === \"123456\"\r\n    //     ) {\r\n    //       alert(\"Successfully logged in\");\r\n    //       e.target.email.value = \"\";\r\n    //       e.target.password.value = \"\";\r\n    //     } else {\r\n    //       alert(\"Wrong email or password combination\");\r\n    //     }\r\n    //   };\r\n    \r\n    return (\r\n        \r\n        <div className=\"row1\">\r\n            <MetaData title={'Login/Signup'} />\r\n            <Route render={({ history }) => <Login history={history} />} />\r\n            <Route render={({ history }) => <Register history={history} />} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default login_signup","C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\UpdateProfile.js",["233"],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\route\\protectedRoute.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\userActions.js",["234"],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\Product.js",["235","236","237","238","239"],"C:\\Users\\ahmed\\Documents\\GitHub\\online-pizza\\frontend\\src\\components\\product\\ProductModal.js",["240","241","242","243"],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":13},{"ruleId":"248","severity":1,"message":"252","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":16},{"ruleId":"248","severity":1,"message":"253","line":15,"column":37,"nodeType":"250","messageId":"251","endLine":15,"endColumn":50},{"ruleId":"254","severity":1,"message":"255","line":30,"column":29,"nodeType":"256","endLine":30,"endColumn":59},{"ruleId":"254","severity":1,"message":"255","line":22,"column":45,"nodeType":"256","endLine":25,"endColumn":47},{"ruleId":"254","severity":1,"message":"255","line":50,"column":45,"nodeType":"256","endLine":53,"endColumn":47},{"ruleId":"254","severity":1,"message":"255","line":78,"column":45,"nodeType":"256","endLine":81,"endColumn":47},{"ruleId":"248","severity":1,"message":"257","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":14},{"ruleId":"248","severity":1,"message":"258","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":14},{"ruleId":"248","severity":1,"message":"259","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"248","severity":1,"message":"260","line":19,"column":37,"nodeType":"250","messageId":"251","endLine":19,"endColumn":44},{"ruleId":"248","severity":1,"message":"261","line":14,"column":5,"nodeType":"250","messageId":"251","endLine":14,"endColumn":25},{"ruleId":"248","severity":1,"message":"259","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":16},{"ruleId":"262","severity":1,"message":"263","line":49,"column":8,"nodeType":"264","endLine":49,"endColumn":52,"suggestions":"265"},{"ruleId":"244","replacedBy":"266"},{"ruleId":"246","replacedBy":"267"},{"ruleId":"248","severity":1,"message":"249","line":8,"column":8,"nodeType":"250","messageId":"251","endLine":8,"endColumn":13},{"ruleId":"248","severity":1,"message":"252","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":16},{"ruleId":"248","severity":1,"message":"259","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":16},{"ruleId":"248","severity":1,"message":"268","line":22,"column":12,"nodeType":"250","messageId":"251","endLine":22,"endColumn":16},{"ruleId":"248","severity":1,"message":"269","line":22,"column":18,"nodeType":"250","messageId":"251","endLine":22,"endColumn":25},{"ruleId":"248","severity":1,"message":"253","line":15,"column":37,"nodeType":"250","messageId":"251","endLine":15,"endColumn":50},{"ruleId":"248","severity":1,"message":"257","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":14},{"ruleId":"248","severity":1,"message":"258","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":14},{"ruleId":"248","severity":1,"message":"259","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"248","severity":1,"message":"260","line":19,"column":37,"nodeType":"250","messageId":"251","endLine":19,"endColumn":44},{"ruleId":"248","severity":1,"message":"260","line":17,"column":19,"nodeType":"250","messageId":"251","endLine":17,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":30,"column":29,"nodeType":"256","endLine":30,"endColumn":59},{"ruleId":"248","severity":1,"message":"270","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"271","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":35},{"ruleId":"248","severity":1,"message":"272","line":1,"column":37,"nodeType":"250","messageId":"251","endLine":1,"endColumn":46},{"ruleId":"248","severity":1,"message":"273","line":5,"column":27,"nodeType":"250","messageId":"251","endLine":5,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":49,"column":8,"nodeType":"264","endLine":49,"endColumn":52,"suggestions":"274"},{"ruleId":"248","severity":1,"message":"261","line":14,"column":5,"nodeType":"250","messageId":"251","endLine":14,"endColumn":25},{"ruleId":"248","severity":1,"message":"275","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":20},{"ruleId":"248","severity":1,"message":"276","line":5,"column":25,"nodeType":"250","messageId":"251","endLine":5,"endColumn":29},{"ruleId":"254","severity":1,"message":"255","line":43,"column":45,"nodeType":"256","endLine":46,"endColumn":47},{"ruleId":"254","severity":1,"message":"255","line":84,"column":45,"nodeType":"256","endLine":87,"endColumn":47},{"ruleId":"254","severity":1,"message":"255","line":112,"column":45,"nodeType":"256","endLine":115,"endColumn":47},{"ruleId":"248","severity":1,"message":"270","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"272","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"276","line":2,"column":25,"nodeType":"250","messageId":"251","endLine":2,"endColumn":29},{"ruleId":"248","severity":1,"message":"277","line":6,"column":10,"nodeType":"250","messageId":"251","endLine":6,"endColumn":14},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'productsCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Loader' is defined but never used.","'MetaData' is defined but never used.","'loading' is assigned a value but never used.","'UPDATE_PROFILE_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["280"],["278"],["279"],"'path' is assigned a value but never used.","'setpath' is assigned a value but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.",["281"],"'ProductModal' is defined but never used.","'Form' is defined but never used.","'show' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"285","text":"286"},{"range":"287","text":"286"},[1430,1474],"[dispatch, alert, error, history, isUpdated, user]",[1430,1474]]